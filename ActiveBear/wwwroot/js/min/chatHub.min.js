"use strict"; var SendMessage = "SendMessage", GetChannelMessages = "GetChannelMessages"; class ChatHub { static PostMessage(e) { if (null !== e && "" !== e && "" !== passwordInput.value && null !== passwordInput.value) { e = Encryption.AesEncrypt(messageInput.value); var t = this.GenerateMessagePacket(e); connection.invoke(SendMessage, t).catch(function (e) { return console.error(e.toString()) }), messageInput.value = "" } } static GetCurrentUser() { connection.invoke(CurrentUser, this.GenerateCookiePacket()).catch(function (e) { return console.error(e.toString()) }) } static RequestAllMessages() { connection.invoke(GetChannelMessages, this.GenerateChannelPacket()).catch(function (e) { return console.error(e.toString()) }) } static RemoveAllMessages() { for (; messageContainer.firstChild;)messageContainer.removeChild(messageContainer.firstChild) } static CurrentUserCookie() { return document.cookie.split("User=")[1].split("; ")[0] } static CurrentChannel() { return window.location.href.split("/Channel/Engage/")[1].substring(0, 36) } static GenerateMessagePacket(e) { var t = { UserCookie: this.CurrentUserCookie(), Channel: this.CurrentChannel(), Message: e }; return JSON.stringify(t) } static GenerateCookiePacket() { var e = { UserCookie: this.CurrentUserCookie() }; return JSON.stringify(e) } static GenerateChannelPacket() { var e = { UserCookie: this.CurrentUserCookie(), Channel: this.CurrentChannel() }; return JSON.stringify(e) } static GenerateChannelCreationPacket(e, t) { var n = { UserCookie: this.CurrentUserCookie(), ChannelTitle: e, ChannelKey: t }; return JSON.stringify(n) } }